name: Build Matoa Model

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versioning.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set version
        id: versioning
        run: |
          VERSION="1.0.${{ github.run_number }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION"

###########################################################
## Build nuget package
###########################################################

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Restore .NET tools
        run: dotnet tool restore --configfile nuget.config
    
      - name: Restore dependencies
        run: dotnet restore 
    
      - name: Build
        run: dotnet build --configuration Release --no-restore -p:Version=${{inputs.version}} -p:AssemblyVersion=${{inputs.version}} -p:FileVersion=${{inputs.version}} -p:PackageVersion=${{inputs.version}} -p:NuGetVersion=${{inputs.version}}
    
      - name: Test
        run: dotnet test --configuration Release --no-build
   
      - name: Push to GitHub Packages
        run: dotnet nuget push ./matoa.model/bin/Release/*.nupkg --source github --skip-duplicate
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

###########################################################
## Build npm
###########################################################

      - name: Generate index.ts for TypeScript models
        run: node npm/generate-index.js
    
      - name: Build npm package
        run: |
          cd npm
          # Use regular npm install instead of npm ci since no package-lock exists
          npm install
          npm run build || (echo "TypeScript compilation failed" && tsc --pretty)
    
      - name: Publish to GitHub Packages
        run: |
          cd npm
          npm publish --registry=https://npm.pkg.github.com/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
